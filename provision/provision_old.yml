---

- hosts: all
  vars_files:
    - vars.yml

  tasks:
  - name: Install required system packages.
    apt: pkg={{item}} state=installed update-cache=yes
    with_items: system_packages

  - name: Add repository key to keychain
    apt_key: url=http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0x5BB92C09DB82666C state=present

  - name: Add repository with Python 3.3 to apt resources list
    apt_repository: repo="deb http://ppa.launchpad.net/fkrull/deadsnakes/ubuntu precise main"
  
  - name: Install Python 3.3 
    apt: pkg={{item}} update-cache=yes force=yes
    with_items: python_packages

  - name: Install setuptools
    shell: "wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | sudo python3.3"

  - name: Install pip
    easy_install: name=pip

  - name: Install pip packages
    pip: name={{item}}
    with_items: pip_packages

  #- name: Install project as python package
  #  pip: name={{repository_root}} virtualenv={{venv_path}}

  - name: Install project requirements
    pip: requirements={{repository_root}}/requirements/{{settings}}.txt virtualenv={{venv_path}} virtualenv_command="virtualenv -p /usr/bin/python3.3"

  - name: Pull django-formulator from git
    command: git clone https://github.com/Cahersan/django-formulator.git chdir={{repository_root}} creates={{repository_root}}/django-formulator 

  - name: Install django-formulator
    pip: name={{repository_root}}/django-formulator virtualenv={{venv_path}}

  - name: Download Openresty
    get_url: url=http://openresty.org/download/ngx_openresty-1.5.8.1.tar.gz dest={{repository_root}}/provision/openresty 

  - name: Install Openresty
    command: sh install.sh chdir={{repository_root}}/provision/openresty creates=/usr/local/openresty
  
  - name: Download Redis
    get_url: url=http://download.redis.io/releases/redis-2.8.7.tar.gz dest={{repository_root}}/provision/redis 

  - name: Install Redis
    command: sh install.sh chdir={{repository_root}}/provision/redis creates=/usr/local/redis

  - name: Setup pg_hba file
    copy: src=conf/pg_hba.conf dest=/etc/postgresql/9.1/main/pg_hba.conf owner=postgres group=postgres mode=0640
    register: pg_file

  - name: Reload postgres if it changed
    service: name=postgresql state=reloaded enabled=yes
    when: pg_file.changed

  - name: Create postgreSQL database
    postgresql_db: name="{{db_name}}"

  - name: Create postgreSQL user
    postgresql_user: db="{{db_name}}" name="{{db_user}}" password="CHANGEME" priv=ALL

#  - name: Sync database
#    django_manage: app_path={{project_root}} command=syncdb virtualenv={{venv_path}}
    
  - name: Copy nginx upstart initialization script
    copy: src=conf/nginx.conf dest=/etc/init
 
  - name: Copy customized .profile file
    copy: src=conf/profile dest=/home/vagrant/.profile force=yes
 
  #- name: Copy uwsgi upstart initialization script
  #  copy: src=conf/uwsgi.conf dest=/etc/init

  # Some symbolic links are useful
  # NGINX and LUA
  - command: mkdir /usr/local/openresty/nginx/conf/sites-enabled/ creates=/usr/local/openresty/nginx/conf/sites-enabled/ 
  - command: mkdir /usr/local/openresty/nginx/conf/lua creates=/usr/local/openresty/nginx/conf/lua 
  - file: src=/vagrant/provision/nginx_conf/sites-available/submit-dev.to dest=/usr/local/openresty/nginx/conf/sites-enabled/submit-dev.to state=link
  - file: src=/vagrant/provision/nginx_conf/lua/sso.lua dest=/usr/local/openresty/nginx/conf/lua/sso.lua state=link

  # REDIS client and server
  - file: src=/usr/local/redis-2.8.6/src/redis-cli dest=/usr/bin/redis-cli state=link
  - file: src=/usr/local/redis-2.8.6/src/redis-server dest=/usr/bin/redis-server state=link

  #- name: Copy uwsgi upstart configuration file
  #  copy: src=conf/uwsgi dest=/etc/default
  #  notify: restart uwsgi

  - name: Copy nginx configuration file
    copy: src=nginx_conf/nginx.conf dest=/usr/local/openresty/nginx/conf/
    notify: restart nginx

  handlers:
    - include: handlers.yml
